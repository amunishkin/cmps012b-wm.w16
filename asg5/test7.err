==13676== Memcheck, a memory error detector
==13676== Copyright (C) 2002-2010, and GNU GPL'd, by Julian Seward et al.
==13676== Using Valgrind-3.6.0 and LibVEX; rerun with -h for copyright info
==13676== Command: spellchk -n -d user.dict test3.in
==13676== 
==13676== Conditional jump or move depends on uninitialised value(s)
==13676==    at 0x401B81: strhash (strhash.c:14)
==13676==    by 0x401A69: has_hashset (hashset.c:163)
==13676==    by 0x401DE2: spellcheck (spellchk.c:59)
==13676==    by 0x4021FB: main (spellchk.c:152)
==13676== 
==13676== Use of uninitialised value of size 8
==13676==    at 0x401AFC: has_hashset (hashset.c:166)
==13676==    by 0x401DE2: spellcheck (spellchk.c:59)
==13676==    by 0x4021FB: main (spellchk.c:152)
==13676== 
==13676== Use of uninitialised value of size 8
==13676==    at 0x401AA2: has_hashset (hashset.c:167)
==13676==    by 0x401DE2: spellcheck (spellchk.c:59)
==13676==    by 0x4021FB: main (spellchk.c:152)
==13676== 
==13676== Conditional jump or move depends on uninitialised value(s)
==13676==    at 0x401AD6: has_hashset (hashset.c:169)
==13676==    by 0x401DE2: spellcheck (spellchk.c:59)
==13676==    by 0x4021FB: main (spellchk.c:152)
==13676== 
==13676== Conditional jump or move depends on uninitialised value(s)
==13676==    at 0x401AE5: has_hashset (hashset.c:170)
==13676==    by 0x401DE2: spellcheck (spellchk.c:59)
==13676==    by 0x4021FB: main (spellchk.c:152)
==13676== 
==13676== 
==13676== HEAP SUMMARY:
==13676==     in use at exit: 8 bytes in 1 blocks
==13676==   total heap usage: 34 allocs, 33 frees, 19,751 bytes allocated
==13676== 
==13676== 8 bytes in 1 blocks are definitely lost in loss record 1 of 1
==13676==    at 0x4A05FDE: malloc (vg_replace_malloc.c:236)
==13676==    by 0x37AAA7FB41: strdup (strdup.c:43)
==13676==    by 0x401F09: load_dictionary (spellchk.c:88)
==13676==    by 0x4020C8: main (spellchk.c:130)
==13676== 
==13676== LEAK SUMMARY:
==13676==    definitely lost: 8 bytes in 1 blocks
==13676==    indirectly lost: 0 bytes in 0 blocks
==13676==      possibly lost: 0 bytes in 0 blocks
==13676==    still reachable: 0 bytes in 0 blocks
==13676==         suppressed: 0 bytes in 0 blocks
==13676== 
==13676== For counts of detected and suppressed errors, rerun with: -v
==13676== Use --track-origins=yes to see where uninitialised values come from
==13676== ERROR SUMMARY: 479 errors from 6 contexts (suppressed: 6 from 6)
