Script started on Tue 12 Feb 2013 03:24:33 PM PST
[?1034hbash-4.1$ mk uninit.c
CSOURCE=uninit.c EXECBIN=uninit
+ cid + uninit.c
+ checksource uninit.c
+ gcc -g -O0 -Wall -Wextra -std=gnu99 uninit.c -o uninit -lm
uninit.c: In function â€˜mainâ€™:
uninit.c:6: warning: unused parameter â€˜argcâ€™
uninit.c:6: warning: unused parameter â€˜argvâ€™
uninit.c:8: warning: â€˜fooâ€™ is used uninitialized in this function
uninit.c:10: warning: â€˜pointerâ€™ is used uninitialized in this function
+ set +x
============================================================
bash-4.1$ valgrind uninit
==2898== Memcheck, a memory error detector
==2898== Copyright (C) 2002-2010, and GNU GPL'd, by Julian Seward et al.
==2898== Using Valgrind-3.6.0 and LibVEX; rerun with -h for copyright info
==2898== Command: uninit
==2898== 
==2898== Use of uninitialised value of size 8
==2898==    at 0x35522437BB: _itoa_word (_itoa.c:195)
==2898==    by 0x3552246367: vfprintf (vfprintf.c:1595)
==2898==    by 0x355224EA29: printf (printf.c:35)
==2898==    by 0x400519: main (uninit.c:8)
==2898== 
==2898== Conditional jump or move depends on uninitialised value(s)
==2898==    at 0x35522437C5: _itoa_word (_itoa.c:195)
==2898==    by 0x3552246367: vfprintf (vfprintf.c:1595)
==2898==    by 0x355224EA29: printf (printf.c:35)
==2898==    by 0x400519: main (uninit.c:8)
==2898== 
==2898== Conditional jump or move depends on uninitialised value(s)
==2898==    at 0x3552245979: vfprintf (vfprintf.c:1595)
==2898==    by 0x355224EA29: printf (printf.c:35)
==2898==    by 0x400519: main (uninit.c:8)
==2898== 
==2898== Conditional jump or move depends on uninitialised value(s)
==2898==    at 0x3552245997: vfprintf (vfprintf.c:1595)
==2898==    by 0x355224EA29: printf (printf.c:35)
==2898==    by 0x400519: main (uninit.c:8)
==2898== 
7
==2898== Use of uninitialised value of size 8
==2898==    at 0x40051E: main (uninit.c:10)
==2898== 
==2898== Invalid read of size 4
==2898==    at 0x40051E: main (uninit.c:10)
==2898==  Address 0x0 is not stack'd, malloc'd or (recently) free'd
==2898== 
==2898== 
==2898== Process terminating with default action of signal 11 (SIGSEGV)
==2898==  Access not within mapped region at address 0x0
==2898==    at 0x40051E: main (uninit.c:10)
==2898==  If you believe this happened as a result of a stack
==2898==  overflow in your program's main thread (unlikely but
==2898==  possible), you can try to increase the size of the
==2898==  main thread stack using the --main-stacksize= flag.
==2898==  The main thread stack size used in this run was 10485760.
==2898== 
==2898== HEAP SUMMARY:
==2898==     in use at exit: 0 bytes in 0 blocks
==2898==   total heap usage: 0 allocs, 0 frees, 0 bytes allocated
==2898== 
==2898== All heap blocks were freed -- no leaks are possible
==2898== 
==2898== For counts of detected and suppressed errors, rerun with: -v
==2898== Use --track-origins=yes to see where uninitialised values come from
==2898== ERROR SUMMARY: 6 errors from 6 contexts (suppressed: 6 from 6)
Segmentation fault (core dumped)
bash-4.1$ echo $?
139
bash-4.1$ pstatus 139
pstatus: 0x008B TERMINATED 11: Segmentation fault (core dumped)
bash-4.1$ exit
exit

Script done on Tue 12 Feb 2013 03:26:23 PM PST
